{
	"info": {
		"_postman_id": "539e4f28-8207-460e-814b-09c8c41d8235",
		"name": "Explore With Me - feature_comments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27003719"
	},
	"item": [
		{
			"name": "Добавление пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201\", function() {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"user\",\r\n    \"email\": \"user@mail.ru\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/users/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление категории",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201\", function() {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"category 1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление эвента",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201\", function() {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"annotation\": \"Some good event bla bla bla\",\r\n    \"title\": \"Event\",\r\n    \"category\": 121,\r\n    \"description\": \"Long description about event\",\r\n    \"eventDate\": \"2023-10-15 12:00:00\",\r\n    \"location\":{\r\n        \"lat\": 15.2589,\r\n        \"lon\": 33.5659\r\n    },\r\n    \"paid\": true,\r\n    \"requestModeration\": true,\r\n    \"participantLimit\": 3000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/136/events",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"136",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление комментатора",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201\", function() {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"commentator\",\r\n    \"email\": \"commentator@mail.ru\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление комментария до публикации события",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 409\", function() {\r",
							"    pm.expect(pm.response.code).to.equal(409);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\": \"MUST_TO_GO\",\r\n    \"content\": \"Big commentary new\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/137/comments/106",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"137",
						"comments",
						"106"
					]
				}
			},
			"response": []
		},
		{
			"name": "Публикация события",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200\", function() {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"stateAction\": \"PUBLISH_EVENT\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/events/106",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"events",
						"106"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление комментария с короткой строкой",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400\", function() {\r",
							"    pm.response.to.be.badRequest;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\": \"MUST_TO_GO\",\r\n    \"content\": \"B\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/137/comments/106",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"137",
						"comments",
						"106"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление комментария с пустой строкой",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400\", function() {\r",
							"    pm.response.to.be.badRequest;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\": \"MUST_TO_GO\",\r\n    \"content\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/137/comments/106",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"137",
						"comments",
						"106"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление комментария OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201\", function() {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"pm.test(\"Должен быть ответ о создании комментария\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь id - 1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id, '\"id\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь переданное содержание\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('content');\r",
							"    pm.expect(jsonData.content).to.eql(\"Big commentary new\");\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь переданный статус\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('status');\r",
							"    pm.expect(jsonData.status).to.eql(\"MUST_TO_GO\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\": \"MUST_TO_GO\",\r\n    \"content\": \"Big commentary new\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/137/comments/106",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"137",
						"comments",
						"106"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление комментария повторно",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 409\", function() {\r",
							"    pm.expect(pm.response.code).to.equal(409);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\": \"MUST_TO_GO\",\r\n    \"content\": \"Big commentary new\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/137/comments/106",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"137",
						"comments",
						"106"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление комментария для своего события",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 409\", function() {\r",
							"    pm.expect(pm.response.code).to.equal(409);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\": \"MUST_TO_GO\",\r\n    \"content\": \"Big commentary new\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/136/comments/106",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"136",
						"comments",
						"106"
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление чужого комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 409\", function() {\r",
							"    pm.expect(pm.response.code).to.equal(409);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\": \"Short commentary updated\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/136/comments/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"136",
						"comments",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление своего комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200\", function() {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"Должен быть ответ о создании комментария\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь id - 1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id, '\"id\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь переданное содержание\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('content');\r",
							"    pm.expect(jsonData.content).to.eql(\"Short commentary updated\");\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь переданный статус\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('status');\r",
							"    pm.expect(jsonData.status).to.eql(\"MUST_TO_GO\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\": \"Short commentary updated\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/137/comments/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"137",
						"comments",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 204\", function() {\r",
							"    pm.expect(pm.response.code).to.equal(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/137/comments/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"137",
						"comments",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление второго комментатора",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"commentator 2\",\r\n    \"email\": \"commentator2@mail.ru\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление комментария OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201\", function() {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"pm.test(\"Должен быть ответ о создании комментария\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь id - 2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id, '\"id\" must be 2').to.eql(2);\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь переданное содержание\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('content');\r",
							"    pm.expect(jsonData.content).to.eql(\"Big commentary new\");\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь переданный статус\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('status');\r",
							"    pm.expect(jsonData.status).to.eql(\"MUST_TO_GO\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\": \"MUST_TO_GO\",\r\n    \"content\": \"Big commentary new\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/137/comments/106",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"137",
						"comments",
						"106"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление второго комментария OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201\", function() {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"pm.test(\"Должен быть ответ о создании комментария\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь id - 3\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id, '\"id\" must be 3').to.eql(3);\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь переданное содержание\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('content');\r",
							"    pm.expect(jsonData.content).to.eql(\"Second commentary new\");\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь переданный статус\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('status');\r",
							"    pm.expect(jsonData.status).to.eql(\"DECENT\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\": \"DECENT\",\r\n    \"content\": \"Second commentary new\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/138/comments/106",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"138",
						"comments",
						"106"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение списка комментариев по эвенту",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200\", function() {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"В теле ответа должен быть лист размером в 2 элемента\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'List length must be 2').to.eql(2);\r",
							"});\r",
							"\r",
							"pm.test(\"Первый комментарий должен иметь id - 2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('id');\r",
							"    pm.expect(jsonData[0].id, '\"id\" must be 2').to.eql(2);\r",
							"});\r",
							"pm.test(\"Первый комментарий должен иметь переданное содержание\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('content');\r",
							"    pm.expect(jsonData[0].content).to.eql(\"Big commentary new\");\r",
							"});\r",
							"pm.test(\"Первый комментарий должен иметь переданный статус\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('status');\r",
							"    pm.expect(jsonData[0].status).to.eql(\"MUST_TO_GO\");\r",
							"});\r",
							"\r",
							"pm.test(\"Второй комментарий должен иметь id - 3\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1]).to.have.property('id');\r",
							"    pm.expect(jsonData[1].id, '\"id\" must be 3').to.eql(3);\r",
							"});\r",
							"pm.test(\"Второй комментарий должен иметь переданное содержание\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1]).to.have.property('content');\r",
							"    pm.expect(jsonData[1].content).to.eql(\"Second commentary new\");\r",
							"});\r",
							"pm.test(\"Второй комментарий должен иметь переданный статус\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1]).to.have.property('status');\r",
							"    pm.expect(jsonData[1].status).to.eql(\"DECENT\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/136/comments/106",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"136",
						"comments",
						"106"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение списка комментариев по пользователю",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200\", function() {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"В теле ответа должен быть лист размером в 1 элемент\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Первый комментарий должен иметь id - 2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('id');\r",
							"    pm.expect(jsonData[0].id, '\"id\" must be 2').to.eql(2);\r",
							"});\r",
							"pm.test(\"Первый комментарий должен иметь переданное содержание\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('content');\r",
							"    pm.expect(jsonData[0].content).to.eql(\"Big commentary new\");\r",
							"});\r",
							"pm.test(\"Первый комментарий должен иметь переданный статус\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('status');\r",
							"    pm.expect(jsonData[0].status).to.eql(\"MUST_TO_GO\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/137/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"137",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение списка комментариев по пользователю без комментариев",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200\", function() {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"В теле ответа должен быть лист размером в 0 элементов\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'List length must be 0').to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/136/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"136",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить лайк комментарию 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200\", function() {\r",
							"    pm.response.to.be.ok;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/136/comments/2/reaction?positive=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"136",
						"comments",
						"2",
						"reaction"
					],
					"query": [
						{
							"key": "positive",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить дизлайк комментарию 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200\", function() {\r",
							"    pm.response.to.be.ok;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/138/comments/2/reaction?positive=false",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"138",
						"comments",
						"2",
						"reaction"
					],
					"query": [
						{
							"key": "positive",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение списка комментариев с лайками по пользователю",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200\", function() {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"В теле ответа должен быть лист размером в 1 элемент\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь id - 2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('id');\r",
							"    pm.expect(jsonData[0].id, '\"id\" must be 2').to.eql(2);\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь переданное содержание\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('content');\r",
							"    pm.expect(jsonData[0].content).to.eql(\"Big commentary new\");\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь переданный статус\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('status');\r",
							"    pm.expect(jsonData[0].status).to.eql(\"MUST_TO_GO\");\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь переданный статус\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('status');\r",
							"    pm.expect(jsonData[0].status).to.eql(\"MUST_TO_GO\");\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь 1 лайк\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('likes');\r",
							"    pm.expect(jsonData[0].likes).to.eql(1);\r",
							"});\r",
							"pm.test(\"Комментарий должен иметь 1 дизлайк\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('dislikes');\r",
							"    pm.expect(jsonData[0].dislikes).to.eql(1);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/137/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"137",
						"comments"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		}
	]
}